{"version":3,"sources":["store/actions/actionTypes.js","store/actions/user.js","store/actions/transfer.js","store/actions/transaction.js","containers/Customers/Customer/Customer.js","containers/Customers/Customers.js","containers/Receiver/Receiver.js","containers/Transfer/Transfer.js","components/Result/Result.js","containers/Transactions/Transaction/Transaction.js","containers/Transactions/Transactions.js","images/2311974.jpg","components/Dashboard/Dashboard.js","components/Accounts/Accounts.jsx","components/Sender/Sender.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/user.js","store/reducers/transfer.js","store/reducers/transaction.js","index.js"],"names":["GET_ALL_USERS","ADD_SENDER","ADD_RECEIVER","TRANSFER_SUCCESS","TRANSFER_COMPLETE","GET_ALL_TRANSACTIONS","getAllUsers","dispatch","axios","get","then","response","data","type","actionTypes","catch","error","console","log","updateBalances","sData","rData","put","id","toast","success","err","updateReceiver","getTransactions","addTransaction","post","Customer","props","className","index","user","username","email","mobileNumber","currentBalance","to","link","onClick","clik","Customers","useDispatch","useComponentWilllMount","actions","users","useSelector","state","map","Math","random","toString","substr","Receiver","sender","transfer","newUsers","filter","Transfer","useState","amount","setamount","receiver","placeholder","value","onChange","e","target","test","tData","parseInt","Result","alt","src","Transaction","border","transaction","borderRight","style","Transactions","transactions","Object","keys","Dashboard","useEffect","photo","Accounts","Sender","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","loading","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaults","baseURL","rootReducer","combineReducers","userReducer","transferReducer","transactionReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.629f3a23.chunk.js","sourcesContent":["export const GET_ALL_USERS = \"GET_ALL_USERS\";\n\nexport const ADD_SENDER = \"ADD_SENDER\";\nexport const ADD_RECEIVER = \"ADD_RECEIVER\";\n\nexport const UPDATE_BALANCES = \"UPDATE_BALANCES\";\nexport const TRANSFER_SUCCESS = \"TRANSFER_SUCCESS\";\n\nexport const TRANSFER_COMPLETE = \"TRANSFER_COMPLETE\";\n\nexport const GET_ALL_TRANSACTIONS = \"GET_ALL_TRANSACTIONS\";","import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst addAllUsers = (data) => {\n    return {\n        type: actionTypes.GET_ALL_USERS,\n        data: data\n    }\n}\n\nexport const getAllUsers = () => {\n    return dispatch => {\n        axios.get(\"users.json\").then(response => {\n            dispatch(addAllUsers(response.data));\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n}","import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\nimport {toast} from 'react-toastify';\n\nexport const addSender = (data) => {\n    toast.success(\"Sender selected\");\n    return {\n        type: actionTypes.ADD_SENDER,\n        data: data\n    }\n}\n\nexport const addReceiver = (data) => {\n    toast.success(\"Receiver selected\");\n    return {\n        type: actionTypes.ADD_RECEIVER,\n        data: data\n    }\n}\n\n// const updateTransfer = () => {\n//     return {\n//         type: actionTypes.TRANSFER_SUCCESS\n//     }\n// }\n\nconst updateReceiver = rData => {\n    return dispatch => {\n        axios.put(\"users/\"+rData.id+\".json\", rData)\n            .then(response => {\n                toast.success(\"Transfer Succesful\");\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n}\n\nexport const updateBalances = (sData, rData) => {\n    return dispatch => {\n        axios.put(\"users/\"+sData.id+\".json\", sData)\n            .then(response => {\n                // dispatch(updateTransfer());\n                dispatch(updateReceiver(rData));\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n}","import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst addAllTransactions = (data) => {\n    return {\n        type: actionTypes.GET_ALL_TRANSACTIONS,\n        data: data\n    }\n}\n\nexport const getTransactions = () => {\n    return dispatch => {\n        axios.get(\"transactions.json\").then(response => {\n            dispatch(addAllTransactions(response.data));\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n}\n\nexport const addTransaction = (data) => {\n    return dispatch => {\n        axios.post(\"transactions.json\", data).then(response => {\n            console.log(response.data);\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n}\n","import React from 'react';\nimport classes from './Customer.module.css';\n\nimport { NavLink } from 'react-router-dom';\n\nconst Customer = (props) => {\n    return (\n        <tr className=\"\">\n            <td>{props.index}</td>\n            <th> {props.user.username}</th>\n            <td>{props.user.email}</td>\n            <td>{props.user.mobileNumber}</td>\n            <td>{props.user.currentBalance}\n            </td>\n            <button className={\"flex text-white text-lg -right-24 absolute px-2 bg-green-500 hover:bg-blue-400 border-0 rounded-md\"}>\n                <NavLink to={props.link} onClick={props.clik} className=\"w-full no-underline\">\n                    Transfer\n                </NavLink>\n            </button>\n        </tr>\n    );\n}\n\nexport default Customer;","import React, { Component } from 'react';\nimport styles from './Customers.module.css';\n\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Customer from './Customer/Customer';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport useComponentWilllMount from 'component-will-mount-hook'\n\nconst Customers = () => {\n    const dispatch = useDispatch();\n    useComponentWilllMount(() => {\n        dispatch(actions.getAllUsers());\n        dispatch({ type: actionTypes.TRANSFER_COMPLETE });\n    });\n    const users = useSelector(state => state.user.users)\n\n    return (\n        <div className=\"container p-5 items-center\">\n            <h1 className=\"text-5xl\">Choose Sender</h1>\n            <div className=\"flex justify-center items-center p-8\">\n                <div className=\"flex flex-col justify-center bg-white rounded-3xl shadow-lg p-8\">\n                    <table className=\"w-5/6 relative\">\n                        <thead>\n                            <th>Sl No</th>\n                            <th>User Name</th>\n                            <th>Email</th>\n                            <th>Mobile Number</th>\n                            <th>Current Balance</th>\n                        </thead>\n                        <tbody className=\"\">\n                            {users.map((user, index) => (\n                                <Customer user={user}\n                                    key={'_' + Math.random().toString(36).substr(2, 9)}\n                                    index={index + 1}\n                                    clik={() => dispatch(actions.addSender(user))}\n                                    link={\"/sender/\" + index} />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Customers;","import React from 'react';\nimport classes from './Receiver.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Customer from '../Customers/Customer/Customer';\n\nconst Receiver = () => {\n    const users = useSelector(state => state.user.users)\n    const sender = useSelector(state => state.transfer.sender)\n    const newUsers = users.filter(user => user.email !== sender.email);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"container py-5\">\n            <h1 className=\"text-5xl\">Send money to....</h1>\n            <div className=\"flex justify-center items-center p-8\">\n                <div className=\"flex flex-col text-lg justify-center bg-white rounded-lg shadow-lg p-8\">\n                    <table className=\"w-5/6 relative\">\n                        <thead>\n                            <th>Sl No</th>\n                            <th>User Name</th>\n                            <th>Email</th>\n                            <th>Mobile Number</th>\n                            <th>Current Balance</th>\n                        </thead>\n                        <tbody>\n                            {newUsers.map((user, index) =>\n                                <Customer user={user}\n                                    key={'_' + Math.random().toString(36).substr(2, 9)}\n                                    index={index + 1}\n                                    clik={() => dispatch(actions.addReceiver(user))}\n                                    link={\"/transfer\"} />\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Receiver;","import React, { useState } from 'react';\nimport classes from './Transfer.module.css';\n\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nimport { toast } from 'react-toastify';\n\nconst Transfer = () => {\n    const [amount, setamount] = useState(\"\")\n    const sender = useSelector(state => state.transfer.sender)\n    const receiver = useSelector(state => state.transfer.receiver)\n    const dispatch = useDispatch()\n    const balanceUpdates = () => {\n        const pattern = /^\\d+$/;\n\n        if (!pattern.test(amount)) {\n            toast.error(\"Invalid amount\");\n            const tData = {\n                sender: sender.email,\n                receiver: receiver.email,\n                amount: parseInt(amount),\n                state: \"failure\"\n            }\n            dispatch(actions.addTransaction(tData))\n        } else if (amount > sender.currentBalance) {\n            toast.error(\"Transfer amount larger than sender balance\");\n            const tData = {\n                sender: sender.email,\n                receiver: receiver.email,\n                amount: parseInt(amount),\n                state: \"failure\"\n            }\n            dispatch(actions.addTransaction(tData))\n        } else {\n            dispatch({ type: actionTypes.TRANSFER_SUCCESS })\n            const sData = {\n                ...sender,\n                currentBalance: parseInt(sender.currentBalance) - parseInt(amount)\n            };\n            const rData = {\n                ...receiver,\n                currentBalance: parseInt(receiver.currentBalance) + parseInt(amount)\n            }\n            dispatch(actions.updateBalances(sData, rData))\n            const tData = {\n                sender: sData.email,\n                receiver: rData.email,\n                amount: parseInt(amount),\n                state: \"success\"\n            }\n            dispatch(actions.addTransaction(tData))\n        }\n    }\n    return (\n        <div className=\"container flex flex-col justify-center items-center\">\n            <h1 className=\"text-5xl font-bold pt-12\">Transfer Form</h1>\n            <div className=\"flex justify-center items-center w-full p-8\">\n                <form className={\"flex flex-col justify-center bg-white rounded-3xl text-xl p-16\"}>\n                    <div className=\"flex flex-col items-center justify-center\">\n                        <div className=\"text-green-500 flex flex-row w-5/6 p-2\">\n                            <h3 className=\"\">Sender: {sender.username}</h3>\n                            <h3 className=\"\">Balance : {sender.currentBalance}</h3>\n                        </div>\n                        <div className=\"text-red-500 flex flex-row w-5/6 p-2\">\n                            <h3 className=\"\">Receiver: {receiver.username}</h3>\n                            <h3>Balance : {receiver.currentBalance}</h3>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"text\" placeholder=\"Transfer Amount\"\n                            value={amount}\n                            onChange={(e) => setamount(e.target.value)}\n                            className=\"border-green-800 rounded-md p-2 border-2 focus:border-green-300 focus:border-0 bg-transparent outline-none\" />\n                    </div>\n                    <div className=\"flex p-4\">\n                        <NavLink to=\"/result\">\n                            <button onClick={balanceUpdates} className=\"btn-proceed bg-green-500 hover:bg-green-700 rounded-lg mx-2 p-2\">Transfer</button>\n                        </NavLink>\n                        <NavLink to=\"/\">\n                            <button className=\"btn-cancel bg-gray-400 hover:bg-gray-700 rounded-lg mx-2 p-2\">Cancel</button>\n                        </NavLink>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Transfer;","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst Result = () => {\n    const transfer = useSelector(state => state.transfer.transfer)\n    return (\n        <div className={\"container flex justify-center items-center\"}>\n            <div className=\"flex flex-col py-12 justify-center items-center text-xl\">\n                <div className=\"w-1/2\">\n                    <img alt=\"success\" src={transfer ? \"/success1.jpg\" : \"/fail.jpg\"} />\n                </div>\n                <h3 className={transfer ? \"text-green-700 text-2xl\" : 'text-red-700 text-2xl'}>Transfer {transfer ? \"Successful\" : \"Failed\"}</h3>\n                <NavLink to=\"/\">\n                    <button className=\"btn-grad p-4 rounded-xl\">Go back to Home</button>\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default Result;","import React from 'react';\nimport classes from './Transaction.module.css';\n\n\nconst Transaction = (props) => {\n    let border = null;\n    if (props.transaction.state === \"success\") {\n        border = { borderRight: \"5px solid green\" }\n    } else if (props.transaction.state === \"failure\") {\n        border = { borderRight: \"5px solid red\" }\n    }\n    return (\n        <tr style={border}>\n            <td>{props.index}</td>\n            <td>{props.transaction.sender}</td>\n            <td>{props.transaction.receiver}</td>\n            <td>{props.transaction.amount}</td>\n            <td>{props.transaction.state}</td>\n        </tr>\n    );\n}\n\nexport default Transaction;","import React from 'react';\nimport classes from './Transactions.module.css';\n\nimport { useSelector } from 'react-redux';\nimport Transaction from './Transaction/Transaction';\n\n\nconst Transactions = () => {\n\n    const transactions = useSelector(state => state.transaction.transactions)\n\n    return (\n        <div className=\"container py-4\">\n            <h1 className=\"text-2xl font-bold p-4\">Transactions</h1>\n            {/* <div className={classes.custRow}>\n                <p>Sl No</p>\n                <p>Sender</p>\n                <p>Receiver</p>\n                <p>Amount</p>\n                <p>State</p>\n            </div> */}\n            <div className=\"flex justify-center\">\n                <table className=\"w-4/6\">\n                    <thead>\n                        <th>Sl No</th>\n                        <th>Sender</th>\n                        <th>Receiver</th>\n                        <th>Amount</th>\n                        <th>State</th>\n                    </thead>\n                    <tbody>\n                        {Object.keys(transactions).map((transaction, index) => (\n                            <Transaction transaction={transactions[transaction]}\n                                key={'_' + Math.random().toString(36).substr(2, 9)}\n                                index={index + 1} />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Transactions;","export default __webpack_public_path__ + \"static/media/2311974.651423b4.jpg\";","import React, { useEffect } from 'react';\nimport \"./Dashboard.css\";\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport photo from '../../images/2311974.jpg';\nconst Dashboard = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(actions.getTransactions());\n    }, [dispatch])\n    return (\n        <div className={\"min-h-full w-full flex justify-center items-center\"}>\n            <div className={\"h-full py-8 flex flex-col container items-center align-center justify-center\"}>\n                <h1 className={\" text-6xl font-bold my-5\"}>Basic Banking System</h1>\n                <div className=\"flex justify-evenly items-center align-middle\">\n                    <div className=\"w-1/2 h-1/2  justify-center\">\n                        <img src={photo} className=\"rounded-lg opacity-60\" />\n                    </div>\n                    <div className=\"flex flex-col justify-center \">\n                        <p className={\" text-3xl font-weight-bold my-3\"}>Create Simple Transactions</p>\n                        <NavLink to=\"/customers\" className={\"btn-grad rounded-lg my-3 ml-2 p-3\"}>\n                            Transfer Money\n                        </NavLink>\n                        <NavLink to=\"/allaccounts\" className={\"btn-grad rounded-lg my-3 ml-5 p-3\"}>\n                            Accounts\n                        </NavLink>\n                        <NavLink to=\"/transfers\" className={\"btn-grad rounded-lg my-3 ml-7 p-3\"}>\n                            Transactions History\n                        </NavLink>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport useComponentWilllMount from 'component-will-mount-hook'\r\n\r\nconst Accounts = () => {\r\n    const dispatch = useDispatch();\r\n    useComponentWilllMount(() => {\r\n        dispatch(actions.getAllUsers());\r\n        dispatch({ type: actionTypes.TRANSFER_COMPLETE });\r\n    });\r\n    const users = useSelector(state => state.user.users)\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"text-3xl p-4\">All Accounts Details</h1>\r\n            <div className=\"flex justify-center\">\r\n            <table className={'w-4/6'}>\r\n            <thead>\r\n                <th>Sl No</th>\r\n                <th>User Name</th>\r\n                <th>Email</th>\r\n                <th>Mobile Number</th>\r\n                <th>Current Balance</th>\r\n            </thead>\r\n            <tbody>\r\n            {users.map((user, index) => (\r\n            <tr>\r\n            <td>{index}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.mobileNumber}</td>\r\n            <td>{user.currentBalance}</td>\r\n            </tr>\r\n            ))}\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Accounts;","import React from 'react';\nimport \"./Sender.css\";\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nconst Sender = () => {\n    const sender = useSelector(state => state.transfer.sender)\n    return (\n        <div className=\"container mx-auto\">\n            <div className=\"flex flex-col items-center py-8\">\n                <h1 className=\"p-2 text-3xl\">Confirm Sender</h1>\n                <div className={\"flex flex-col justify-center w-1/2 text-xl bg-white rounded-3xl shadow-lg p-12\"}>\n                    <div className=\"flex justify-evenly\">\n                        <div className={\"sender-info flex flex-col p-2 rounded-lg m-2\"}>\n                            <h3>UserName:</h3>\n                            <p className=\"font-bold\">{sender.username}</p>\n                        </div>\n                        <div className={\"sender-info flex flex-col p-2 rounded-lg m-2\"}>\n                            <h3>Email</h3>\n                            <p className=\"font-bold\">{sender.email}</p>\n                        </div>\n                    </div>\n                    <div className={\"sender-info flex flex-col p-2 rounded-lg m-2\"}>\n                        <h3>Mobile Number</h3>\n                        <p className=\"font-bold\">{sender.mobileNumber}</p>\n                    </div>\n                    <div className={\"sender-info flex flex-col p-2 rounded-lg m-2\"}>\n                        <h3 className=\"text-xl\">Current Balance:</h3>\n                        <p className=\"font-bold text-3xl\">{sender.currentBalance}</p>\n                    </div>\n                    <div className={\"p-2 flex justify-center my-3 mx-2\"}>\n                        <NavLink to=\"/receiver\" className={\"btn-proceed bg-green-500 hover:bg-green-700 rounded-lg mx-2 p-3\"}>\n                            Proceed\n                        </NavLink>\n                        <NavLink to=\"/customers\" className={\"btn-cancel bg-gray-400 hover:bg-gray-700 rounded-lg mx-2 p-3\"}>\n                            Go Back\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Sender;","import './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Customers from './containers/Customers/Customers';\nimport Receiver from './containers/Receiver/Receiver';\nimport Transfer from './containers/Transfer/Transfer';\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\nimport Result from './components/Result/Result';\nimport Transactions from './containers/Transactions/Transactions';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Accounts from './components/Accounts/Accounts';\nimport Sender from './components/Sender/Sender';\nfunction App() {\n  return (\n    //basename={process.env.PUBLIC_URL}\n    //\"predeploy\": \"npm run build\",\n    //\"deploy\": \"gh-pages -d build\"\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/transfers\" component={Transactions} />\n          <Route path=\"/result\" component={Result} />\n          <Route path=\"/transfer\" component={Transfer} />\n          <Route path=\"/receiver\" component={Receiver} />\n          <Route path=\"/sender/:id\" component={Sender} />\n          <Route path=\"/customers\" component={Customers} />\n          <Route path=\"/allaccounts\" component={Accounts} />\n          <Route path=\"/\" component={Dashboard} />\n        </Switch>\n        <ToastContainer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    users: [],\n    loading: false\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.GET_ALL_USERS:\n            return updateObject(state, {users: action.data});\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    sender: {\n        id: \"\",\n        username: \"\",\n        email: \"\",\n        mobileNumber: \"\",\n        currentBalance: \"\"\n    },\n    receiver: {\n        id: \"\",\n        username: \"\",\n        email: \"\",\n        mobileNumber: \"\",\n        currentBalance: \"\"\n    },\n    transfer: false\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_SENDER:\n            return updateObject(state, {\n                sender: {\n                    id: action.data.id,\n                    username: action.data.username,\n                    email: action.data.email,\n                    mobileNumber: action.data.mobileNumber,\n                    currentBalance: action.data.currentBalance\n                }\n            });\n        case actionTypes.ADD_RECEIVER:\n            return updateObject(state, {\n                receiver: {\n                    id: action.data.id,\n                    username: action.data.username,\n                    email: action.data.email,\n                    mobileNumber: action.data.mobileNumber,\n                    currentBalance: action.data.currentBalance\n                }\n            });\n        case actionTypes.TRANSFER_SUCCESS:\n            return updateObject(state, {\n                transfer: true\n            });\n        case actionTypes.TRANSFER_COMPLETE:\n            return updateObject(state, {\n                transfer: false\n            });\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    transactions: []\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.GET_ALL_TRANSACTIONS:\n            return updateObject(state, {\n                transactions: action.data\n            });\n        default:\n            return state;\n    }\n}\n \nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport axios from 'axios';\nimport userReducer from './store/reducers/user';\nimport transferReducer from './store/reducers/transfer';\nimport transactionReducer from './store/reducers/transaction';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\naxios.defaults.baseURL = \"https://banking-system-4453a-default-rtdb.firebaseio.com/\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  transfer: transferReducer,\n  transaction: transactionReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}